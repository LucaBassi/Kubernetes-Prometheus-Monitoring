#Alertmanager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "alertmanager"
  labels:
    app: alertmanager
  name: alertmanager
spec:
  selector:
    matchLabels:
      app: "alertmanager"
  template:
    metadata:
      labels:
        app: "alertmanager"
    spec:
      containers:
        - name: "alertmanager"
          image: "datchos/alertmanager:v1"
          ports:
            - name: http
              containerPort: 9093
---
apiVersion: v1
kind: Service
metadata:
  name: "alertmanager"
spec:
  selector:
    app: "alertmanager"
  type: NodePort
  ports:
    - protocol: TCP
      port: 9093
      targetPort: 9093
      nodePort: 31002

#Prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "prometheus"
  labels:
    app: prometheus
  name: prometheus
spec:
  selector:
    matchLabels:
      app: "prometheus"
  template:
    metadata:
      labels:
        app: "prometheus"
    spec:
      containers:
        - name: "prometheus"
          image: "datchos/prometheus:v1"
          imagePullPolicy: Always
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--web.config.file=/etc/prometheus/web.yml'
            - '--web.external-url=http://demo.localdev.me:8080/prometheus'
            - '--storage.tsdb.retention=12h'
            - '--storage.tsdb.path=/prometheus'
          ports:
            - name: http
              containerPort: 9090
          resources:
           limits:
             cpu: 500m
           requests:
             cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: "prometheus"
spec:
  selector:
    app: "prometheus"
  type: NodePort
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
      nodePort: 31001
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: "prometheus"
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: "prometheus"
 minReplicas: 1
 maxReplicas: 10
 targetCPUUtilizationPercentage: 50

#Grafana 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: "grafana"
          image: "datchos/grafana:prod"
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: grafana
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: grafana
  selector:
    app: grafana
  sessionAffinity: None
  type: LoadBalancer

# InfluxDB
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: influxdb-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdb-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "influxdb"
  labels:
    app: influxdb
  name: influxdb
spec:
  selector:
    matchLabels:
      app: "influxdb"
  template:
    metadata:
      labels:
        app: "influxdb"
    spec:
      volumes:
        - name: influxdb-pv-storage
          persistentVolumeClaim:
            claimName: influxdb-pv-claim
      containers:
        - name: "influxdb"
          image: "datchos/influxdb:v1"
          ports:
            - name: http
              containerPort: 8086
          volumeMounts:
            - mountPath: /var/lib/influxdb
              name: influxdb-pv-storage
---
apiVersion: v1
kind: Service
metadata:
  name: "influxdb"
spec:
  selector:
    app: "influxdb"
  type: NodePort
  ports:
    - protocol: TCP
      port: 8086
      targetPort: 8086
      nodePort: 31000
